#!/bin/bash
util_name=$(basename $0)
  
help_page(){
    echo "Usage: $util_name <project_name>"
    echo "Example: $util_name 'GNSZ6737M_65_N(LWG_DSDS).mak'"
}
make(){
    PROJECT=$(echo $subcommand | grep -o "[A-Z_0-9]*(" | grep -o "[A-Z_0-9]*")
    TYPE=$(echo $subcommand | grep -o "([A-Z_0-9]*)" | grep -o "[A-Z_0-9]*")
    echo "$util_name: Start making modem using $PROJECT($TYPE)"
    sleep 0.5s
    #perlwbrew switch perl-5.10.1
    echo "$util_name: exporting old version of perl (5.10.1)"
    sleep 0.2s
    OUT="build/$PROJECT/$TYPE"
    echo "$util_name: start build! it may take some time, please wait!"
    ./make.sh "$subcommand" new > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "$util_name: build make: success!"
    	sleep 0.3s
    	rm -rf temp_modem && mkdir -p temp_modem
    	echo "$util_name: copying modem files to $OUT"
    	cp $OUT/bin/'~GNSZ6737M_65_N(LWG_DSDS).mak' temp_modem/modem_1_lwg_n.mak
    	cp $OUT/dhl/database/mdm_layout_desc.dat temp_modem/mdm_layout_desc_1_lwg_n.dat
    	cp $OUT/bin/GNSZ6737M_65_N_MDBIN_PCB01_MT6735_S00.MOLY_LR9_W1444_MD_LWTG_MP_V110_5.bin temp_modem/modem_1_lwg_n.img
    	cp $OUT/bin/MT6735_MP_SPI_MT6735_DSPMOLY_LR9_W1444_MD_LWTG_MP_V110_5.bin temp_modem/dsp_1_lwg_n.bin
    	cp $OUT/dhl/database/catcher_filter.bin temp_modem/catcher_filter_1_lwg_n.bin
    	cp $OUT/dhl/database/DbgInfo_LR9.W1444.MD.LWTG.* temp_modem/
    	cp $OUT/dhl/database/BPLGUInfoCustomAppSrcP_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V110_5 temp_modem/BPLGUInfoCustomAppSrcP_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V110_5_1_lwg_n
    	cp $OUT/dhl/database/em_filter.bin temp_modem/em_filter_1_lwg_n.bin
    	cp $OUT/dhl/database/BPMdMetaDatabase_MOLY_LR9_W1444_MD_LWTG_MP_V110_5 temp_modem/BPMdMetaDatabase_MOLY_LR9_W1444_MD_LWTG_MP_V110_5_1_lwg_n
	sleep 0.4s
    	echo "$util_name: SUCCESS!"
    else
        echo "$util_name: ERROR!"
    fi
}

subcommand=$1
case $subcommand in
    "" | "-h" | "--help")
        help_page
        ;;
    *)
        shift
        make $@
        if [ $? = 127 ]; then
            echo "Error: '$subcommand' no rule to make '$subcommand'" >&2
            echo "       Run '$ProgName --help' for a list of known subcommands." >&2
            exit 1
        fi
        ;;
esac
